{"version":3,"file":"daterange-filter.component.js","sourceRoot":"","sources":["../../../../../src/ng2-smart-table/components/filter/filter-types/daterange-filter.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAU,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AAGvC,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,wCAAwC,CAAC;AAChD,OAAO,gCAAgC,CAAC;AAaxC,IAAa,wBAAwB;IAAS,4CAAa;IASzD;QAAA,YACE,iBAAO,SACR;QATD,8BAAwB,GAAkB;YACxC,mBAAmB;YACnB,UAAU,EAAE,YAAY;SACzB,CAAC;QAEF,sBAAgB,GAAG,IAAI,OAAO,EAAO,CAAC;;IAItC,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAqCC;QApCC,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC;QACvD,IAAI,CAAC,wBAAwB,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;QACzD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,wBAAwB,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QAC1D,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAC3D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC;oBAC7B,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAC1D,CAAC;YACH,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,KAAK,IAAI,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,KAAK,WAAW,CAAC,CAAC,CAAC;YAC7F,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,UAAC,KAAa,EAAE,MAAc;gBACzD,EAAE,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC;oBACtB,MAAM,CAAC,IAAI,CAAC;gBACd,CAAC;gBAED,IAAM,KAAK,GAAa,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC3C,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;gBAC9C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC9E,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,gBAAgB;aAC3C,GAAG,CAAC,UAAC,EAAO,IAAK,OAAA,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,EAA5B,CAA4B,CAAC;aAC9C,oBAAoB,EAAE;aACtB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;aACxB,SAAS,CAAC,UAAC,MAAc;YACxB,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,qDAAkB,GAAlB,UAAmB,KAAwB;QACzC,yEAAyE;QACzE,oCAAoC;QAEpC,IAAM,KAAK,GAAM,KAAK,CAAC,SAAS,UAAK,KAAK,CAAC,OAAS,CAAC;QACrD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IACH,+BAAC;AAAD,CAAC,AA3DD,CAA8C,aAAa,GA2D1D;AA3DY,wBAAwB;IAXpC,SAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,sTAOT;KACF,CAAC;;GACW,wBAAwB,CA2DpC;SA3DY,wBAAwB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport {IMyDrpOptions, IMyDateRangeModel} from 'mydaterangepicker';\n\nimport { DefaultFilter } from './default-filter';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/debounceTime';\n\n@Component({\n  selector: 'daterange-filter',\n  template: `      \n\t<my-date-range-picker class=\"form-control\" \n                          name=\"mydaterange\"\n\t\t\t\t\t\t  [ngClass]=\"inputClass\"\n                          [options]=\"myDateRangePickerOptions\"\n\t\t\t\t\t\t  (dateRangeChanged)=\"onDateRangeChanged($event)\">\n    </my-date-range-picker>\n  `,\n})\nexport class DateRangeFilterComponent extends DefaultFilter implements OnInit {\n\n  myDateRangePickerOptions: IMyDrpOptions = {\n    // other options...\n    dateFormat: 'mm/dd/yyyy',\n  };\n\n  dateRangeContent = new Subject<any>();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    const config = this.column.getFilterConfig().daterange;\n    this.myDateRangePickerOptions.dateFormat = config.format;\n    if (this.column.width) {\n      this.myDateRangePickerOptions.width = this.column.width;\n    }\n\n    if (config.align) {\n      if (config.align === 'left') {\n        this.myDateRangePickerOptions.alignSelectorRight = false;\n      } else {\n        if (config.align === 'right') {\n          this.myDateRangePickerOptions.alignSelectorRight = true;\n        }\n      }\n    }\n\n    if (this.column.filterFunction === null || typeof this.column.filterFunction === 'undefined') {\n      this.column.filterFunction = (value: string, search: string) => {\n        if (search === '0..0') {\n          return true;\n        }\n\n        const dates: string[] = search.split('..');\n        const time = new Date(value).getTime() / 1000;\n        return Number.parseInt(dates[0]) < time && Number.parseInt(dates[1]) > time;\n      };\n    }\n\n    this.changesSubscription = this.dateRangeContent\n        .map((ev: any) => (ev && ev.title) || ev || '')\n        .distinctUntilChanged()\n        .debounceTime(this.delay)\n        .subscribe((search: string) => {\n          this.query = search;\n          this.setFilter();\n        });\n  }\n\n  onDateRangeChanged(event: IMyDateRangeModel) {\n    // event properties are: event.beginDate, event.endDate, event.formatted,\n    // event.beginEpoc and event.endEpoc\n\n    const range = `${event.beginEpoc}..${event.endEpoc}`;\n    this.dateRangeContent.next(range);\n  }\n}\n"]}