var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component } from '@angular/core';
import { Subject } from 'rxjs/Subject';
import { DefaultFilter } from './default-filter';
import 'rxjs/add/operator/distinctUntilChanged';
import 'rxjs/add/operator/debounceTime';
var DateRangeFilterComponent = (function (_super) {
    __extends(DateRangeFilterComponent, _super);
    function DateRangeFilterComponent() {
        var _this = _super.call(this) || this;
        _this.myDateRangePickerOptions = {
            // other options...
            dateFormat: 'mm/dd/yyyy',
        };
        _this.dateRangeContent = new Subject();
        return _this;
    }
    DateRangeFilterComponent.prototype.ngOnInit = function () {
        var _this = this;
        var config = this.column.getFilterConfig().daterange;
        this.myDateRangePickerOptions.dateFormat = config.format;
        if (this.column.width) {
            this.myDateRangePickerOptions.width = this.column.width;
        }
        if (config.align) {
            if (config.align === 'left') {
                this.myDateRangePickerOptions.alignSelectorRight = false;
            }
            else {
                if (config.align === 'right') {
                    this.myDateRangePickerOptions.alignSelectorRight = true;
                }
            }
        }
        if (this.column.filterFunction === null || typeof this.column.filterFunction === 'undefined') {
            this.column.filterFunction = function (value, search) {
                if (search === '0..0') {
                    return true;
                }
                var dates = search.split('..');
                var time = new Date(value).getTime() / 1000;
                return Number.parseInt(dates[0]) < time && Number.parseInt(dates[1]) > time;
            };
        }
        this.changesSubscription = this.dateRangeContent
            .map(function (ev) { return (ev && ev.title) || ev || ''; })
            .distinctUntilChanged()
            .debounceTime(this.delay)
            .subscribe(function (search) {
            _this.query = search;
            _this.setFilter();
        });
    };
    DateRangeFilterComponent.prototype.onDateRangeChanged = function (event) {
        // event properties are: event.beginDate, event.endDate, event.formatted,
        // event.beginEpoc and event.endEpoc
        var range = event.beginEpoc + ".." + event.endEpoc;
        this.dateRangeContent.next(range);
    };
    return DateRangeFilterComponent;
}(DefaultFilter));
DateRangeFilterComponent = __decorate([
    Component({
        selector: 'daterange-filter',
        template: "      \n\t<my-date-range-picker class=\"form-control\" \n                          name=\"mydaterange\"\n\t\t\t\t\t\t  [ngClass]=\"inputClass\"\n                          [options]=\"myDateRangePickerOptions\"\n\t\t\t\t\t\t  (dateRangeChanged)=\"onDateRangeChanged($event)\">\n    </my-date-range-picker>\n  ",
    }),
    __metadata("design:paramtypes", [])
], DateRangeFilterComponent);
export { DateRangeFilterComponent };
//# sourceMappingURL=daterange-filter.component.js.map